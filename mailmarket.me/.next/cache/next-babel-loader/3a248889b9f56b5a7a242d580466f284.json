{"ast":null,"code":"import cookie from \"cookie\";\n\nconst checkLogin = (req, res) => {\n  if (req != undefined) {\n    if (req.headers != undefined) {\n      if (req.headers.cookie != undefined && req.headers.cookie != null) {\n        const cookies = cookie.parse(req.headers.cookie);\n\n        if (cookies.username && cookies.password) {\n          if (!req.headers.referer.contains(\"dashboard\")) {\n            res.writeHead(302, {\n              Location: \"/dashboard\"\n            });\n            res.end();\n          }\n\n          return {\n            loggedIn: true\n          };\n        } else {\n          if (res) {\n            res.writeHead(302, {\n              Location: \"/login\"\n            });\n            res.end();\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    loggedIn: false\n  };\n};\n\nexport default checkLogin;","map":{"version":3,"sources":["/Users/mac/Desktop/Web Apps/MailMarket.me/mailmarket.me/lib/checkAuth.js"],"names":["cookie","checkLogin","req","res","undefined","headers","cookies","parse","username","password","referer","contains","writeHead","Location","end","loggedIn"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;;AACA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7B,MAAGD,GAAG,IAAIE,SAAV,EAAoB;AAChB,QAAGF,GAAG,CAACG,OAAJ,IAAeD,SAAlB,EAA4B;AACxB,UAAGF,GAAG,CAACG,OAAJ,CAAYL,MAAZ,IAAsBI,SAAtB,IAAmCF,GAAG,CAACG,OAAJ,CAAYL,MAAZ,IAAsB,IAA5D,EAAiE;AAC7D,cAAMM,OAAO,GAAGN,MAAM,CAACO,KAAP,CAAaL,GAAG,CAACG,OAAJ,CAAYL,MAAzB,CAAhB;;AACA,YAAGM,OAAO,CAACE,QAAR,IAAoBF,OAAO,CAACG,QAA/B,EAAwC;AACpC,cAAG,CAACP,GAAG,CAACG,OAAJ,CAAYK,OAAZ,CAAoBC,QAApB,CAA6B,WAA7B,CAAJ,EAA8C;AAC1CR,YAAAA,GAAG,CAACS,SAAJ,CAAc,GAAd,EAAmB;AAACC,cAAAA,QAAQ,EAAE;AAAX,aAAnB;AACAV,YAAAA,GAAG,CAACW,GAAJ;AACH;;AACD,iBAAO;AAACC,YAAAA,QAAQ,EAAE;AAAX,WAAP;AACH,SAND,MAMM;AACF,cAAGZ,GAAH,EAAO;AACHA,YAAAA,GAAG,CAACS,SAAJ,CAAc,GAAd,EAAmB;AAACC,cAAAA,QAAQ,EAAE;AAAX,aAAnB;AACAV,YAAAA,GAAG,CAACW,GAAJ;AACH;AACJ;AACJ;AACJ;AACJ;;AACD,SAAO;AAACC,IAAAA,QAAQ,EAAE;AAAX,GAAP;AACH,CArBD;;AAuBA,eAAed,UAAf","sourcesContent":["import cookie from \"cookie\";\nconst checkLogin = (req, res) => {\n    if(req != undefined){\n        if(req.headers != undefined){\n            if(req.headers.cookie != undefined && req.headers.cookie != null){\n                const cookies = cookie.parse(req.headers.cookie);\n                if(cookies.username && cookies.password){\n                    if(!req.headers.referer.contains(\"dashboard\")){\n                        res.writeHead(302, {Location: \"/dashboard\"});\n                        res.end();\n                    }\n                    return {loggedIn: true};\n                }else {\n                    if(res){\n                        res.writeHead(302, {Location: \"/login\"});\n                        res.end();\n                    }\n                }\n            }\n        }\n    }\n    return {loggedIn: false}\n}\n\nexport default checkLogin;"]},"metadata":{},"sourceType":"module"}