{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Desktop/Web Apps/MailMarket.me/mailmarket.me/pages/dashboard.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from \"next/head\";\nimport checkAuth from \"../lib/checkAuth\";\nimport axios from \"axios\";\n\nvar DashBoardIndex = /*#__PURE__*/function (_React$Component) {\n  _inherits(DashBoardIndex, _React$Component);\n\n  var _super = _createSuper(DashBoardIndex);\n\n  function DashBoardIndex() {\n    var _this;\n\n    _classCallCheck(this, DashBoardIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      sent: 0,\n      points: 0,\n      pointsToUse: 0,\n      leads: 0,\n      decisor: false,\n      loading: true\n    });\n\n    return _this;\n  }\n\n  _createClass(DashBoardIndex, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.loggedIn && this.props.id != null) {\n        axios({\n          url: \"/api/user\",\n          method: \"POST\",\n          data: {\n            id: this.props.id\n          }\n        }).then(function (response) {\n          _this2.setState({\n            sent: response.data.sent,\n            points: response.data.points,\n            leads: response.data.leads\n          });\n        })[\"catch\"](function (err) {\n          if (err) console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      function decisorDom(points, pointsToUse) {\n        if (pointsToUse <= points) {\n          return __jsx(\"div\", {\n            className: \"container decisor-items-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }\n          }, __jsx(\"div\", {\n            className: \"row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }\n          }, __jsx(\"div\", {\n            className: \"col-md-12\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }\n          }, __jsx(\"h2\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }\n          }, \"You will use \", pointsToUse, \" points.\", __jsx(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 71\n            }\n          }), \"Are you sure?\")), __jsx(\"div\", {\n            className: \"col-md-12 row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }\n          }, __jsx(\"div\", {\n            className: \"col-md-6\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }\n          }, __jsx(\"button\", {\n            className: \"decisor-button white\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }\n          }, \"Yes\")), __jsx(\"div\", {\n            className: \"col-md-6\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }\n          }, __jsx(\"button\", {\n            className: \"decisor-button black\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }\n          }, \"No\")))));\n        } else {\n          return __jsx(\"div\", {\n            className: \"container decisor-items-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }\n          }, __jsx(\"div\", {\n            className: \"row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }\n          }, __jsx(\"div\", {\n            className: \"col-md-12\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }\n          }, __jsx(\"h2\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }\n          }, \"You don't have enough points.\", __jsx(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 66\n            }\n          }), \"You need \", points - pointsToUse, \" points.\")), __jsx(\"div\", {\n            className: \"col-md-12 row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }\n          }, __jsx(\"div\", {\n            className: \"col-md-12\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }\n          }, __jsx(\"button\", {\n            className: \"decisor-button white\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }\n          }, \"Add Points\")))));\n        }\n      }\n\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, \"Dashboard\"), __jsx(\"link\", {\n        href: \"/css/bootstrap.css\",\n        rel: \"stylesheet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }), __jsx(\"link\", {\n        href: \"/css/dashboard.css\",\n        rel: \"stylesheet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      })), __jsx(\"div\", {\n        className: this.state.decisor ? \"decisor active\" : \"decisor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, decisorDom(this.state.points, this.state.pointsToUse)), __jsx(\"div\", {\n        className: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"row center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"statistics-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      }, \"E-Mails Sent\"), __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }\n      }, this.state.sent))), __jsx(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"statistics-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      }, \"Available Points\"), __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }\n      }, this.state.points))), __jsx(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"statistics-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, \"Leads\"), __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }\n      }, this.state.leads)))), __jsx(\"div\", {\n        className: \"row\",\n        style: {\n          margin: \"5rem 0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"col-md-4 input-block center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }, \"Custom E-Mail List (Seperate by comma)\"), __jsx(\"textarea\", {\n        className: \"custom-list\",\n        type: \"text\",\n        placeholder: \"Leave blank if you don't want to add custom E-Mails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: \"col-md-8 input-block center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }, \"Template\"), __jsx(\"input\", {\n        type: \"number\",\n        className: \"center\",\n        placeholder: \"Total E-Mails to be sent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }), __jsx(\"textarea\", {\n        type: \"text\",\n        placeholder: \"Enter your Custom HTML or your Message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }), __jsx(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      }, \"Send!\")))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var req, res;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              req = _ref.req, res = _ref.res;\n              return _context.abrupt(\"return\", checkAuth(req, res));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return DashBoardIndex;\n}(React.Component);\n\nexport { DashBoardIndex as default };","map":{"version":3,"sources":["/Users/mac/Desktop/Web Apps/MailMarket.me/mailmarket.me/pages/dashboard.jsx"],"names":["Head","checkAuth","axios","DashBoardIndex","sent","points","pointsToUse","leads","decisor","loading","props","loggedIn","id","url","method","data","then","response","setState","err","console","log","decisorDom","state","margin","req","res","React","Component"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport checkAuth from \"../lib/checkAuth\";\nimport axios from \"axios\";\nexport default class DashBoardIndex extends React.Component {\n\n    state = {\n        sent: 0,\n        points: 0,\n        pointsToUse: 0,\n        leads: 0,\n        decisor: false,\n        loading: true,\n    }\n\n    static async getInitialProps({ req, res }) {\n        return checkAuth(req, res);\n    }\n\n    componentDidMount() {\n        if (this.props.loggedIn && this.props.id != null) {\n            axios({\n                url: \"/api/user\",\n                method: \"POST\",\n                data: {\n                    id: this.props.id\n                }\n            }).then(response => {\n                this.setState({\n                    sent: response.data.sent,\n                    points: response.data.points,\n                    leads: response.data.leads\n                });\n            }).catch(err => {\n                if (err) console.log(err);\n            })\n        }\n    }\n\n    render() {\n\n        function decisorDom(points, pointsToUse) {\n            if (pointsToUse <= points) {\n                return (\n                    <div className=\"container decisor-items-container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <h2>You will use {pointsToUse} points.<br></br>Are you sure?</h2>\n                            </div>\n                            <div className=\"col-md-12 row\">\n                                <div className=\"col-md-6\">\n                                    <button className=\"decisor-button white\">Yes</button>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <button className=\"decisor-button black\">No</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div className=\"container decisor-items-container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <h2>You don't have enough points.<br></br>You need {points - pointsToUse} points.</h2>\n                            </div>\n                            <div className=\"col-md-12 row\">\n                                <div className=\"col-md-12\">\n                                    <button className=\"decisor-button white\">Add Points</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        }\n\n\n        return (\n            <React.Fragment>\n                <Head>\n                    <title>Dashboard</title>\n                    <link href=\"/css/bootstrap.css\" rel=\"stylesheet\"></link>\n                    <link href=\"/css/dashboard.css\" rel=\"stylesheet\"></link>\n                </Head>\n                <div className={this.state.decisor ? \"decisor active\" : \"decisor\"}>\n                        {decisorDom(this.state.points, this.state.pointsToUse)}\n                </div>\n                <div className=\"container-fluid\">\n                    <div className=\"row center\">\n                        <div className=\"col-md-4\">\n                            <div className=\"statistics-block\">\n                                <h2>E-Mails Sent</h2>\n                                <h3>{this.state.sent}</h3>\n                            </div>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <div className=\"statistics-block\">\n                                <h2>Available Points</h2>\n                                <h3>{this.state.points}</h3>\n                            </div>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <div className=\"statistics-block\">\n                                <h2>Leads</h2>\n                                <h3>{this.state.leads}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\" style={{ margin: \"5rem 0\" }}>\n                        <div className=\"col-md-4 input-block center\">\n                            <h3>Custom E-Mail List (Seperate by comma)</h3>\n                            <textarea className=\"custom-list\" type=\"text\" placeholder=\"Leave blank if you don't want to add custom E-Mails\"></textarea>\n                        </div>\n                        <div className=\"col-md-8 input-block center\">\n                            <h3>Template</h3>\n                            <input type=\"number\" className=\"center\" placeholder=\"Total E-Mails to be sent\"></input>\n                            <textarea type=\"text\" placeholder=\"Enter your Custom HTML or your Message\"></textarea>\n                            <button>Send!</button>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}