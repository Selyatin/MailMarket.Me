{"ast":null,"code":"import { Base64 } from \"js-base64\";\n\nconst mongodb = require(\"mongodb\");\n\nconst MongoClient = mongodb.MongoClient;\nconst uri = \"mongodb+srv://main-user:09730Success@mailmarketme-k4esh.mongodb.net/test?retryWrites=true&w=majority\";\nconst client = new MongoClient(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nexport default ((req, res) => {\n  if (req.method === \"POST\" && req.body.id != undefined && req.body.id != null && req.body.pointsToUse != undefined && req.body.pointsToUse != null && req.body.customEmailList != undefined && req.body.customEmailList != null && req.body.msgToSend != undefined && req.body.msgToSend != null) {\n    client.connect(err => {\n      if (err) throw err;\n      const db = client.db(\"MailMarketMe\");\n      db.collection(\"accounts\").findOne({\n        _id: mongodb.ObjectId(Base64.decode(req.body.id))\n      }, (err, result) => {\n        if (req.body.pointsToUse <= result.points) {\n          db.collection(\"accounts\").updateOne({\n            _id: mongodb.ObjectId(Base64.decode(req.body.id))\n          }, {\n            $set: {\n              points: result.points - req.body.pointsToUse\n            }\n          });\n          console.log(req.body.msgToSend); // Send the emails\n\n          res.status(200).end();\n        } else {\n          res.status(406).end();\n        }\n      });\n    });\n  } else {\n    res.status(406).end();\n  }\n});","map":{"version":3,"sources":["/Users/mac/Desktop/Web Apps/MailMarket.me/mailmarket.me/pages/api/mailer.js"],"names":["Base64","mongodb","require","MongoClient","uri","client","useNewUrlParser","useUnifiedTopology","req","res","method","body","id","undefined","pointsToUse","customEmailList","msgToSend","connect","err","db","collection","findOne","_id","ObjectId","decode","result","points","updateOne","$set","console","log","status","end"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,WAArB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,WAAW,GAAGF,OAAO,CAACE,WAA5B;AACA,MAAMC,GAAG,GAAG,sGAAZ;AAEA,MAAMC,MAAM,GAAG,IAAIF,WAAJ,CAAgBC,GAAhB,EAAqB;AAACE,EAAAA,eAAe,EAAE,IAAlB;AAAwBC,EAAAA,kBAAkB,EAAE;AAA5C,CAArB,CAAf;AAEA,gBAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3B,MAAGD,GAAG,CAACE,MAAJ,KAAe,MAAf,IAAyBF,GAAG,CAACG,IAAJ,CAASC,EAAT,IAAeC,SAAxC,IAAqDL,GAAG,CAACG,IAAJ,CAASC,EAAT,IAAe,IAApE,IAA4EJ,GAAG,CAACG,IAAJ,CAASG,WAAT,IAAwBD,SAApG,IAAiHL,GAAG,CAACG,IAAJ,CAASG,WAAT,IAAwB,IAAzI,IAAiJN,GAAG,CAACG,IAAJ,CAASI,eAAT,IAA4BF,SAA7K,IAA0LL,GAAG,CAACG,IAAJ,CAASI,eAAT,IAA4B,IAAtN,IAA8NP,GAAG,CAACG,IAAJ,CAASK,SAAT,IAAsBH,SAApP,IAAiQL,GAAG,CAACG,IAAJ,CAASK,SAAT,IAAsB,IAA1R,EAA+R;AAC7RX,IAAAA,MAAM,CAACY,OAAP,CAAeC,GAAG,IAAI;AACpB,UAAGA,GAAH,EAAQ,MAAMA,GAAN;AACR,YAAMC,EAAE,GAAGd,MAAM,CAACc,EAAP,CAAU,cAAV,CAAX;AACEA,MAAAA,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BC,OAA1B,CAAkC;AAACC,QAAAA,GAAG,EAAErB,OAAO,CAACsB,QAAR,CAAiBvB,MAAM,CAACwB,MAAP,CAAchB,GAAG,CAACG,IAAJ,CAASC,EAAvB,CAAjB;AAAN,OAAlC,EAAuF,CAACM,GAAD,EAAMO,MAAN,KAAiB;AACpG,YAAGjB,GAAG,CAACG,IAAJ,CAASG,WAAT,IAAwBW,MAAM,CAACC,MAAlC,EAAyC;AACrCP,UAAAA,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BO,SAA1B,CAAoC;AAACL,YAAAA,GAAG,EAAErB,OAAO,CAACsB,QAAR,CAAiBvB,MAAM,CAACwB,MAAP,CAAchB,GAAG,CAACG,IAAJ,CAASC,EAAvB,CAAjB;AAAN,WAApC,EACI;AACIgB,YAAAA,IAAI,EAAE;AACFF,cAAAA,MAAM,EAAED,MAAM,CAACC,MAAP,GAAgBlB,GAAG,CAACG,IAAJ,CAASG;AAD/B;AADV,WADJ;AAOAe,UAAAA,OAAO,CAACC,GAAR,CAAYtB,GAAG,CAACG,IAAJ,CAASK,SAArB,EARqC,CASrC;;AACAP,UAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACH,SAXD,MAWM;AACFvB,UAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACH;AACJ,OAfD;AAgBH,KAnBD;AAoBD,GArBD,MAsBI;AACFvB,IAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACD;AACF,CA1BD","sourcesContent":["import {Base64} from \"js-base64\";\nconst mongodb = require(\"mongodb\");\nconst MongoClient = mongodb.MongoClient;\nconst uri = \"mongodb+srv://main-user:09730Success@mailmarketme-k4esh.mongodb.net/test?retryWrites=true&w=majority\";\n\nconst client = new MongoClient(uri, {useNewUrlParser: true, useUnifiedTopology: true});\n\nexport default (req, res) => {\n  if(req.method === \"POST\" && req.body.id != undefined && req.body.id != null && req.body.pointsToUse != undefined && req.body.pointsToUse != null && req.body.customEmailList != undefined && req.body.customEmailList != null && req.body.msgToSend != undefined && req.body.msgToSend != null){\n    client.connect(err => {\n      if(err) throw err;\n      const db = client.db(\"MailMarketMe\");\n        db.collection(\"accounts\").findOne({_id: mongodb.ObjectId(Base64.decode(req.body.id))}, (err, result) => {\n            if(req.body.pointsToUse <= result.points){\n                db.collection(\"accounts\").updateOne({_id: mongodb.ObjectId(Base64.decode(req.body.id))}, \n                    {\n                        $set: {\n                            points: result.points - req.body.pointsToUse\n                        }\n                    }\n                );\n                console.log(req.body.msgToSend);\n                // Send the emails\n                res.status(200).end();\n            }else {\n                res.status(406).end();\n            }\n        });\n    });\n  }\n  else{\n    res.status(406).end();\n  }\n}"]},"metadata":{},"sourceType":"module"}