{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Router from \"next/router\";\nimport Head from \"next/head\";\nimport checkAuth from \"../lib/checkAuth\";\nimport axios from \"axios\";\n\nvar DashBoardIndex = /*#__PURE__*/function (_React$Component) {\n  _inherits(DashBoardIndex, _React$Component);\n\n  var _super = _createSuper(DashBoardIndex);\n\n  function DashBoardIndex(props) {\n    var _this;\n\n    _classCallCheck(this, DashBoardIndex);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      sent: 0,\n      points: 0,\n      pointsToUse: 0,\n      msgToSend: null,\n      customEmailList: \"\",\n      totalEmailsSent: 0,\n      pageLoading: true,\n      decisor: false,\n      decisorLoading: false,\n      decisorResult: false\n    };\n    _this.setDecisorOn = _this.setDecisorOn.bind(_assertThisInitialized(_this));\n    _this.setDecisorOff = _this.setDecisorOff.bind(_assertThisInitialized(_this));\n    _this.setPointsToUse = _this.setPointsToUse.bind(_assertThisInitialized(_this));\n    _this.setMsgToSend = _this.setMsgToSend.bind(_assertThisInitialized(_this));\n    _this.setCustomEmailList = _this.setCustomEmailList.bind(_assertThisInitialized(_this));\n    _this.sendRequest = _this.sendRequest.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DashBoardIndex, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.loggedIn && this.props.id != null) {\n        axios({\n          url: \"/api/user\",\n          method: \"POST\",\n          data: {\n            id: this.props.id\n          }\n        }).then(function (response) {\n          _this2.setState({\n            sent: response.data.sent,\n            points: response.data.points,\n            totalEmailsSent: response.data.totalEmailsSent,\n            pageLoading: false\n          });\n        })[\"catch\"](function (err) {\n          return Router.push(\"/login\");\n        });\n      }\n    }\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest() {\n      var _this3 = this;\n\n      if (this.state.msgToSend != null) {\n        this.setState({\n          decisorLoading: true\n        });\n        axios({\n          url: \"/api/mailer\",\n          method: \"POST\",\n          data: {\n            id: this.props.id,\n            pointsToUse: this.state.pointsToUse,\n            msgToSend: this.state.msgToSend,\n            customEmailList: this.state.customEmailList\n          }\n        }).then(function (result) {\n          if (result.status == 200) {\n            _this3.setState({\n              decisor: false,\n              decisorLoading: false,\n              decisorResult: true,\n              points: _this3.state.points - _this3.state.pointsToUse,\n              totalEmailsSent: _this3.state.pointsToUse\n            });\n          }\n        })[\"catch\"](function (err) {\n          _this3.setState({\n            decisorLoading: false,\n            decisorResult: false\n          });\n        });\n      } else {\n        alert(\"Your message is empty!\");\n      }\n    }\n  }, {\n    key: \"setPointsToUse\",\n    value: function setPointsToUse(elem) {\n      this.setState({\n        pointsToUse: elem.target.value\n      });\n    }\n  }, {\n    key: \"setMsgToSend\",\n    value: function setMsgToSend(elem) {\n      this.setState({\n        msgToSend: elem.target.value\n      });\n    }\n  }, {\n    key: \"setCustomEmailList\",\n    value: function setCustomEmailList(elem) {\n      this.setState({\n        customEmailList: elem.target.value\n      });\n    }\n  }, {\n    key: \"setDecisorOn\",\n    value: function setDecisorOn() {\n      this.setState({\n        decisor: true\n      });\n    }\n  }, {\n    key: \"setDecisorOff\",\n    value: function setDecisorOff() {\n      this.setState({\n        decisor: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      function decisorDom(self) {\n        if (self.state.pointsToUse <= self.state.points) {\n          return __jsx(\"div\", {\n            className: \"container decisor-items-container\"\n          }, __jsx(\"div\", {\n            className: \"row\"\n          }, __jsx(\"div\", {\n            className: \"col-md-12\"\n          }, __jsx(\"h2\", null, \"You will use \", __jsx(\"b\", null, self.state.pointsToUse), \" points.\", __jsx(\"br\", null), __jsx(\"br\", null), \"Points left: \", __jsx(\"b\", null, self.state.points - self.state.pointsToUse), __jsx(\"br\", null), __jsx(\"br\", null), \"Are you sure?\")), __jsx(\"div\", {\n            className: self.state.decisorLoading ? \"col-md-12 decisor-loading\" : \"col-md-12 decisor-loading hide\"\n          }, __jsx(\"div\", {\n            className: \"loadingio-spinner-eclipse-h5c55szghjc\",\n            style: {\n              transform: \"scale(0.7)\"\n            }\n          }, __jsx(\"div\", {\n            className: \"ldio-3kphjdhe4ws\"\n          }, __jsx(\"div\", null)))), __jsx(\"div\", {\n            className: self.state.decisorLoading ? \"col-md-12 row hide\" : \"col-md-12 row\"\n          }, __jsx(\"div\", {\n            className: \"col-md-6\"\n          }, __jsx(\"button\", {\n            className: \"decisor-button\",\n            onClick: self.sendRequest\n          }, \"Yes\")), __jsx(\"div\", {\n            className: \"col-md-6\"\n          }, __jsx(\"button\", {\n            className: \"decisor-button black\"\n          }, \"No\")))));\n        } else {\n          return __jsx(\"div\", {\n            className: \"container decisor-items-container\"\n          }, __jsx(\"div\", {\n            className: \"row\"\n          }, __jsx(\"div\", {\n            className: \"col-md-12\"\n          }, __jsx(\"h2\", null, \"You don't have enough points.\", __jsx(\"br\", null), __jsx(\"br\", null), \"You need \", self.state.pointsToUse - self.state.points == 1 ? self.state.pointsToUse - self.points + \" point\" : self.state.pointsToUse - self.points + \" points\", \".\")), __jsx(\"div\", {\n            className: \"col-md-12 row\"\n          }, __jsx(\"div\", {\n            className: \"col-md-6\"\n          }, __jsx(\"button\", {\n            className: \"decisor-button\"\n          }, \"Add Points\")), __jsx(\"div\", {\n            className: \"col-md-6\"\n          }, __jsx(\"button\", {\n            className: \"decisor-button black\",\n            onClick: self.setDecisorOff\n          }, \"Close\")))));\n        }\n      }\n\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Dashboard\"), __jsx(\"link\", {\n        href: \"/css/bootstrap.css\",\n        rel: \"stylesheet\"\n      }), __jsx(\"link\", {\n        href: \"/css/dashboard.css\",\n        rel: \"stylesheet\"\n      })), __jsx(\"div\", {\n        className: this.state.pageLoading ? \"loading\" : \"loading hide\"\n      }, __jsx(\"div\", {\n        className: \"loadingio-spinner-eclipse-h5c55szghjc\"\n      }, __jsx(\"div\", {\n        className: \"ldio-3kphjdhe4ws\"\n      }, __jsx(\"div\", null)))), __jsx(\"div\", {\n        className: this.state.decisor ? \"decisor active\" : \"decisor\"\n      }, decisorDom(this)), __jsx(\"div\", {\n        className: \"container-fluid\"\n      }, __jsx(\"div\", {\n        className: \"row center\"\n      }, __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(\"div\", {\n        className: \"statistics-block\"\n      }, __jsx(\"h2\", null, \"E-Mails Sent\"), __jsx(\"h3\", null, this.state.sent))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(\"div\", {\n        className: \"statistics-block\"\n      }, __jsx(\"h2\", null, \"Available Points\"), __jsx(\"h3\", null, this.state.points))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(\"div\", {\n        className: \"statistics-block\"\n      }, __jsx(\"h2\", null, \"Total E-Mails Sent\"), __jsx(\"h3\", null, this.state.totalEmailsSent)))), __jsx(\"div\", {\n        className: \"row\",\n        style: {\n          margin: \"5rem 0\"\n        }\n      }, __jsx(\"div\", {\n        className: \"col-md-4 input-block center\"\n      }, __jsx(\"h3\", null, \"Custom E-Mail List (Seperate by comma)\"), __jsx(\"textarea\", {\n        className: \"custom-list\",\n        type: \"text\",\n        placeholder: \"Leave blank if you don't want to add custom E-Mails\",\n        onChange: this.setCustomEmailList\n      })), __jsx(\"div\", {\n        className: \"col-md-8 input-block center\"\n      }, __jsx(\"h3\", null, \"Template\"), __jsx(\"input\", {\n        type: \"number\",\n        className: \"center\",\n        placeholder: \"Total E-Mails to be sent\",\n        onChange: this.setPointsToUse\n      }), __jsx(\"textarea\", {\n        type: \"text\",\n        placeholder: \"Enter your Custom HTML or your Message\",\n        onChange: this.setMsgToSend\n      }), __jsx(\"button\", {\n        onClick: this.setDecisorOn\n      }, \"Send!\")))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var req, res;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              req = _ref.req, res = _ref.res;\n              return _context.abrupt(\"return\", checkAuth(req, res));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return DashBoardIndex;\n}(React.Component);\n\nexport { DashBoardIndex as default };","map":null,"metadata":{},"sourceType":"module"}