{"ast":null,"code":"import { Base64 } from \"js-base64\";\n\nconst nodemailer = require(\"nodemailer\");\n\nconst mongodb = require(\"mongodb\");\n\nconst fs = require(\"fs\");\n\nconst MongoClient = mongodb.MongoClient;\nconst uri = \"mongodb+srv://main-user:09730Success@mailmarketme-k4esh.mongodb.net/test?retryWrites=true&w=majority\";\nconst client = new MongoClient(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nconst defaultMailList = fs.readFile(\"email-list.txt\", (err, res) => {\n  console.log(res);\n});\nconsole.log(defaultMailList);\nconst transporter = nodemailer.createTransport({\n  service: \"gmail\",\n  auth: {\n    user: \"robertlostsworen@gmail.com\",\n    pass: \"robertlostsworenismyname!\"\n  }\n});\nexport default ((req, res) => {\n  if (req.method === \"POST\" && req.body.id != undefined && req.body.id != null && req.body.pointsToUse != undefined && req.body.pointsToUse != null && req.body.customEmailList != undefined && req.body.customEmailList != null && req.body.msgToSend != undefined && req.body.msgToSend != null) {\n    client.connect(err => {\n      if (err) throw err;\n      const db = client.db(\"MailMarketMe\");\n      db.collection(\"accounts\").findOne({\n        _id: mongodb.ObjectId(Base64.decode(req.body.id))\n      }, (err, result) => {\n        if (req.body.pointsToUse <= result.points) {\n          db.collection(\"accounts\").updateOne({\n            _id: mongodb.ObjectId(Base64.decode(req.body.id))\n          }, {\n            $set: {\n              points: result.points - req.body.pointsToUse,\n              totalEmailsSent: req.body.pointsToUse\n            }\n          });\n          let emails;\n\n          if (req.body.customEmailList.length > 0) {\n            emails = req.body.customEmailList.replace(\" \", \"\").split(\",\");\n          } else {\n            emails = [];\n          } // Send the emails\n\n\n          res.status(200).end();\n        } else {\n          res.status(406).end();\n        }\n      });\n    });\n  } else {\n    res.status(406).end();\n  }\n});","map":{"version":3,"sources":["/Users/mac/Desktop/Web Apps/MailMarket.me/mailmarket.me/pages/api/mailer.js"],"names":["Base64","nodemailer","require","mongodb","fs","MongoClient","uri","client","useNewUrlParser","useUnifiedTopology","defaultMailList","readFile","err","res","console","log","transporter","createTransport","service","auth","user","pass","req","method","body","id","undefined","pointsToUse","customEmailList","msgToSend","connect","db","collection","findOne","_id","ObjectId","decode","result","points","updateOne","$set","totalEmailsSent","emails","length","replace","split","status","end"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,WAArB;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMG,WAAW,GAAGF,OAAO,CAACE,WAA5B;AACA,MAAMC,GAAG,GAAG,sGAAZ;AAEA,MAAMC,MAAM,GAAG,IAAIF,WAAJ,CAAgBC,GAAhB,EAAqB;AAACE,EAAAA,eAAe,EAAE,IAAlB;AAAwBC,EAAAA,kBAAkB,EAAE;AAA5C,CAArB,CAAf;AAEA,MAAMC,eAAe,GAAGN,EAAE,CAACO,QAAH,CAAY,gBAAZ,EAA8B,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,CAFuB,CAAxB;AAGAC,OAAO,CAACC,GAAR,CAAYL,eAAZ;AACA,MAAMM,WAAW,GAAGf,UAAU,CAACgB,eAAX,CAA2B;AAC3CC,EAAAA,OAAO,EAAE,OADkC;AAE3CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,4BADJ;AAEFC,IAAAA,IAAI,EAAE;AAFJ;AAFqC,CAA3B,CAApB;AAQA,gBAAe,CAACC,GAAD,EAAMT,GAAN,KAAc;AAC3B,MAAGS,GAAG,CAACC,MAAJ,KAAe,MAAf,IAAyBD,GAAG,CAACE,IAAJ,CAASC,EAAT,IAAeC,SAAxC,IAAqDJ,GAAG,CAACE,IAAJ,CAASC,EAAT,IAAe,IAApE,IAA4EH,GAAG,CAACE,IAAJ,CAASG,WAAT,IAAwBD,SAApG,IAAiHJ,GAAG,CAACE,IAAJ,CAASG,WAAT,IAAwB,IAAzI,IAAiJL,GAAG,CAACE,IAAJ,CAASI,eAAT,IAA4BF,SAA7K,IAA0LJ,GAAG,CAACE,IAAJ,CAASI,eAAT,IAA4B,IAAtN,IAA8NN,GAAG,CAACE,IAAJ,CAASK,SAAT,IAAsBH,SAApP,IAAiQJ,GAAG,CAACE,IAAJ,CAASK,SAAT,IAAsB,IAA1R,EAA+R;AAC7RtB,IAAAA,MAAM,CAACuB,OAAP,CAAelB,GAAG,IAAI;AACpB,UAAGA,GAAH,EAAQ,MAAMA,GAAN;AACR,YAAMmB,EAAE,GAAGxB,MAAM,CAACwB,EAAP,CAAU,cAAV,CAAX;AACEA,MAAAA,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BC,OAA1B,CAAkC;AAACC,QAAAA,GAAG,EAAE/B,OAAO,CAACgC,QAAR,CAAiBnC,MAAM,CAACoC,MAAP,CAAcd,GAAG,CAACE,IAAJ,CAASC,EAAvB,CAAjB;AAAN,OAAlC,EAAuF,CAACb,GAAD,EAAMyB,MAAN,KAAiB;AACpG,YAAGf,GAAG,CAACE,IAAJ,CAASG,WAAT,IAAwBU,MAAM,CAACC,MAAlC,EAAyC;AACrCP,UAAAA,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BO,SAA1B,CAAoC;AAACL,YAAAA,GAAG,EAAE/B,OAAO,CAACgC,QAAR,CAAiBnC,MAAM,CAACoC,MAAP,CAAcd,GAAG,CAACE,IAAJ,CAASC,EAAvB,CAAjB;AAAN,WAApC,EACI;AACIe,YAAAA,IAAI,EAAE;AACFF,cAAAA,MAAM,EAAED,MAAM,CAACC,MAAP,GAAgBhB,GAAG,CAACE,IAAJ,CAASG,WAD/B;AAEFc,cAAAA,eAAe,EAAEnB,GAAG,CAACE,IAAJ,CAASG;AAFxB;AADV,WADJ;AAQA,cAAIe,MAAJ;;AACA,cAAGpB,GAAG,CAACE,IAAJ,CAASI,eAAT,CAAyBe,MAAzB,GAAkC,CAArC,EAAuC;AACnCD,YAAAA,MAAM,GAAGpB,GAAG,CAACE,IAAJ,CAASI,eAAT,CAAyBgB,OAAzB,CAAiC,GAAjC,EAAsC,EAAtC,EAA0CC,KAA1C,CAAgD,GAAhD,CAAT;AACH,WAFD,MAEM;AACFH,YAAAA,MAAM,GAAG,EAAT;AACH,WAdoC,CAkBrC;;;AACA7B,UAAAA,GAAG,CAACiC,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACH,SApBD,MAoBM;AACFlC,UAAAA,GAAG,CAACiC,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACH;AACJ,OAxBD;AAyBH,KA5BD;AA6BD,GA9BD,MA+BI;AACFlC,IAAAA,GAAG,CAACiC,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACD;AACF,CAnCD","sourcesContent":["import {Base64} from \"js-base64\";\nconst nodemailer = require(\"nodemailer\");\nconst mongodb = require(\"mongodb\");\nconst fs = require(\"fs\");\nconst MongoClient = mongodb.MongoClient;\nconst uri = \"mongodb+srv://main-user:09730Success@mailmarketme-k4esh.mongodb.net/test?retryWrites=true&w=majority\";\n\nconst client = new MongoClient(uri, {useNewUrlParser: true, useUnifiedTopology: true});\n\nconst defaultMailList = fs.readFile(\"email-list.txt\", (err, res) => {\n    console.log(res);\n});\nconsole.log(defaultMailList);\nconst transporter = nodemailer.createTransport({\n    service: \"gmail\",\n    auth: {\n        user: \"robertlostsworen@gmail.com\",\n        pass: \"robertlostsworenismyname!\"\n    }\n});\n\nexport default (req, res) => {\n  if(req.method === \"POST\" && req.body.id != undefined && req.body.id != null && req.body.pointsToUse != undefined && req.body.pointsToUse != null && req.body.customEmailList != undefined && req.body.customEmailList != null && req.body.msgToSend != undefined && req.body.msgToSend != null){\n    client.connect(err => {\n      if(err) throw err;\n      const db = client.db(\"MailMarketMe\");\n        db.collection(\"accounts\").findOne({_id: mongodb.ObjectId(Base64.decode(req.body.id))}, (err, result) => {\n            if(req.body.pointsToUse <= result.points){\n                db.collection(\"accounts\").updateOne({_id: mongodb.ObjectId(Base64.decode(req.body.id))}, \n                    {\n                        $set: {\n                            points: result.points - req.body.pointsToUse,\n                            totalEmailsSent: req.body.pointsToUse\n                        }\n                    }\n                );\n                let emails;\n                if(req.body.customEmailList.length > 0){\n                    emails = req.body.customEmailList.replace(\" \", \"\").split(\",\");\n                }else {\n                    emails = [];\n                }\n\n\n\n                // Send the emails\n                res.status(200).end();\n            }else {\n                res.status(406).end();\n            }\n        });\n    });\n  }\n  else{\n    res.status(406).end();\n  }\n}"]},"metadata":{},"sourceType":"module"}