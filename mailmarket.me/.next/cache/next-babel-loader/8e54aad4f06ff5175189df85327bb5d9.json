{"ast":null,"code":"import { Base64 } from \"js-base64\";\nimport nodemailer from \"nodemailer\";\nimport mongodb from \"mongodb\";\nimport path from \"path\";\nimport fs from \"fs\";\nconst MongoClient = mongodb.MongoClient;\nconst uri = \"mongodb+srv://main-user:09730Success@mailmarketme-k4esh.mongodb.net/test?retryWrites=true&w=majority\";\nconst client = new MongoClient(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nconst transporter = nodemailer.createTransport({\n  host: \"mbox.contact.bg\",\n  secure: false,\n  auth: {\n    user: \"mailmarketme@mbox.contact.bg\",\n    pass: \"09730Success\"\n  }\n});\nexport default ((req, res) => {\n  if (req.method === \"POST\" && req.body.id != undefined && req.body.id != null && req.body.pointsToUse != undefined && req.body.pointsToUse != null && req.body.customEmailList != undefined && req.body.customEmailList != null && req.body.msgToSend != undefined && req.body.msgToSend != null) {\n    client.connect(err => {\n      if (err) throw err;\n      const db = client.db(\"MailMarketMe\");\n      db.collection(\"accounts\").findOne({\n        _id: mongodb.ObjectId(Base64.decode(req.body.id))\n      }, (err, result) => {\n        if (req.body.pointsToUse <= result.points) {\n          db.collection(\"accounts\").updateOne({\n            _id: mongodb.ObjectId(Base64.decode(req.body.id))\n          }, {\n            $set: {\n              points: result.points - req.body.pointsToUse,\n              totalEmailsSent: req.body.pointsToUse\n            }\n          });\n          let mailsToSet = db.collection(\"emails\").find({});\n          req.body.customEmailList.replace(\" \", \"\").split(\",\").forEach(data => {\n            transporter.sendMail({\n              from: \"selyatinismet@gmail.com\",\n              to: data,\n              subject: \"Hello Test\",\n              text: \"<h1>HELLO FRIEND</h1>\"\n            });\n          }); // mailsToSet.forEach(data => {\n          //     transporter.sendMail({\n          //         from: \"selyatinismet@gmail.com\",\n          //         to: data.email,\n          //         subject: \"Hello Test\",\n          //         text: \"<h1>HELLO FRIEND</h1>\"\n          //     })\n          // });;\n          // Send the emails \n\n          res.status(200).end();\n        } else {\n          res.status(406).end();\n        }\n      });\n    });\n  } else {\n    res.status(406).end();\n  }\n});","map":{"version":3,"sources":["/Users/mac/Desktop/Web Apps/MailMarket.me/mailmarket.me/pages/api/mailer.js"],"names":["Base64","nodemailer","mongodb","path","fs","MongoClient","uri","client","useNewUrlParser","useUnifiedTopology","transporter","createTransport","host","secure","auth","user","pass","req","res","method","body","id","undefined","pointsToUse","customEmailList","msgToSend","connect","err","db","collection","findOne","_id","ObjectId","decode","result","points","updateOne","$set","totalEmailsSent","mailsToSet","find","replace","split","forEach","data","sendMail","from","to","subject","text","status","end"],"mappings":"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","sourcesContent":["import {Base64} from \"js-base64\";\nimport nodemailer from \"nodemailer\";\nimport mongodb from \"mongodb\";\nimport path from \"path\";\nimport fs from \"fs\";\nconst MongoClient = mongodb.MongoClient;\nconst uri = \"mongodb+srv://main-user:09730Success@mailmarketme-k4esh.mongodb.net/test?retryWrites=true&w=majority\";\n\nconst client = new MongoClient(uri, {useNewUrlParser: true, useUnifiedTopology: true});\nconst transporter = nodemailer.createTransport({\n    host: \"mbox.contact.bg\",\n    secure: false,\n    auth: {\n        user: \"mailmarketme@mbox.contact.bg\",\n        pass: \"09730Success\"\n    }\n});\n\nexport default (req, res) => {\n  if(req.method === \"POST\" && req.body.id != undefined && req.body.id != null && req.body.pointsToUse != undefined && req.body.pointsToUse != null && req.body.customEmailList != undefined && req.body.customEmailList != null && req.body.msgToSend != undefined && req.body.msgToSend != null){\n    client.connect(err => {\n      if(err) throw err;\n      const db = client.db(\"MailMarketMe\");\n        db.collection(\"accounts\").findOne({_id: mongodb.ObjectId(Base64.decode(req.body.id))}, (err, result) => {\n            if(req.body.pointsToUse <= result.points){\n                db.collection(\"accounts\").updateOne({_id: mongodb.ObjectId(Base64.decode(req.body.id))}, \n                    {\n                        $set: {\n                            points: result.points - req.body.pointsToUse,\n                            totalEmailsSent: req.body.pointsToUse\n                        }\n                    }\n                );\n\n                let mailsToSet = db.collection(\"emails\").find({})\n                req.body.customEmailList.replace(\" \", \"\").split(\",\").forEach(data => {\n                    transporter.sendMail({\n                        from: \"selyatinismet@gmail.com\",\n                        to: data,\n                        subject: \"Hello Test\",\n                        text: \"<h1>HELLO FRIEND</h1>\"\n                    })\n                });\n                // mailsToSet.forEach(data => {\n                //     transporter.sendMail({\n                //         from: \"selyatinismet@gmail.com\",\n                //         to: data.email,\n                //         subject: \"Hello Test\",\n                //         text: \"<h1>HELLO FRIEND</h1>\"\n                //     })\n                // });;\n                // Send the emails \n                res.status(200).end();\n            }else {\n                res.status(406).end();\n            }\n        });\n    });\n  }\n  else{\n    res.status(406).end();\n  }\n}"]},"metadata":{},"sourceType":"module"}